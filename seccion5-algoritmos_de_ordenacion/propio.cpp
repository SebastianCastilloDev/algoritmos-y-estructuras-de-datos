#include <iostream>
#include <ctime>

using namespace std;

void propioSort() {

    unsigned t0,t1;
    t0 = clock();

    int v[] = {259,265,369,292,723,332,766,15,162,621,861,800,887,442,518,274,457,613,631,467,509,292,310,87,708,26,685,825,21,524,854,241,489,125,334,859,668,116,161,160,250,344,477,577,245,212,434,300,495,152,0,43,738,639,659,531,482,961,224,984,331,289,431,907,782,716,136,894,480,254,692,253,797,202,250,364,617,982,410,895,662,107,491,277,325,190,849,222,336,457,510,232,214,123,244,419,226,693,409,593,119,494,811,254,812,522,571,603,885,631,385,692,47,814,656,269,662,177,606,88,525,883,992,15,846,332,659,682,17,266,910,681,78,979,377,12,558,164,155,152,615,891,823,139,747,959,134,531,395,800,648,807,625,604,582,751,919,260,937,280,526,79,796,422,916,776,333,301,618,273,370,802,562,929,12,208,918,767,413,448,456,322,965,408,475,104,178,286,470,648,665,764,822,603,50,751,260,64,200,970,209,572,113,169,358,680,685,536,274,49,153,673,663,124,255,61,426,219,726,378,279,627,86,80,807,585,895,245,837,498,38,510,879,331,367,561,981,903,12,224,266,154,288,498,887,781,613,608,532,448,341,877,571,151,888,355,208,846,151,59,162,62,766,830,144,738,437,766,668,689,918,950,796,969,494,118,229,639,679,988,637,44,834,945,522,403,576,665,185,257,282,494,902,370,129,135,176,229,866,947,460,946,573,439,529,620,508,99,14,338,316,166,505,474,906,808,365,347,494,515,715,218,124,341,391,288,579,692,14,849,160,950,386,384,217,231,231,58,683,473,988,993,823,877,438,678,898,145,341,138,591,346,579,78,524,878,548,782,912,566,615,807,791,534,311,173,4,270,928,223,703,443,487,719,931,206,543,251,537,67,290,241,336,718,940,863,365,825,854,606,96,850,182,584,473,439,607,477,119,611,656,154,236,149,884,542,154,609,956,331,653,643,756,33,771,231,257,228,181,433,328,497,795,251,717,766,965,789,635,581,600,872,608,411,515,494,812,399,40,985,471,486,460,962,192,615,896,802,344,320,785,181,238,909,12,377,300,338,785,312,966,174,887,104,673,794,198,972,72,221,329,661,88,348,628,849,181,60,983,418,678,391,60,696,384,602,483,9,657,902,865,199,591,310,147,610,566,721,182,558,289,878,513,172,951,398,53,52,684,352,455,812,675,401,85,989,2,100,436,673,63,847,410,155,620,708,985,891,690,861,229,270,188,194,412,613,740,549,130,541,573,790,560,252,326,841,300,282,725,160,354,489,636,216,730,468,965,444,652,383,533,99,105,619,177,609,783,883,891,758,930,343,701,560,522,855,877,931,62,938,609,256,389,757,360,511,536,866,232,207,315,708,304,316,452,6,520,682,643,44,864,442,540,868,531,924,111,866,581,437,318,380,925,829,529,573,43,41,761,423,862,463,45,914,927,777,125,435,241,78,246,677,68,494,524,261,25,867,844,963,733,443,90,669,891,539,259,289,15,0,880,317,418,390,757,280,452,122,989,438,773,578,213,573,421,165,648,90,570,890,222,960,247,497,397,119,600,32,868,159,459,104,234,731,75,663,473,13,617,965,577,22,953,774,349,578,832,560,507,784,769,291,775,732,449,844,606,547,512,446,20,143,36,824,100,652,265,964,242,943,331,188,989,649,552,9,199,709,979,151,242,892,371,665,563,639,550,725,123,674,977,825,268,900,327,865,325,643,173,96,934,284,91,947,156,757,92,833,175,827,336,548,563,569,533,47,160,81,407,182,846,159,8,593,187,109,479,382,631,388,492,115,377,404,735,80,413,313,160,31,312,907,148,280,730,502,752,209,251,972,150,489,324,558,914,2,797,897,430,660,74,203,978,452,743,342,174,460,697,486,141,226,512,97,603,456,879,847,858,469,54,884,111,68,911,326,114,625,28,271,450,505,15,978,750,211,728,300,237,54,875,81,988,18,466,118,610,802,936,883,773,57,659,7,760,398,742,478,228,716,688,51,667,385,204,656,179,38,164,25,916,133,795,319,76,486,547,990,57,119,896,972,757,699,318,295,804,614,15,301,759,928,298,588,590,833,349,479,942,264,741,504,469,60,830,598,652,689,90,392,110,348,509,241,577,703,69,751,760,661,928,635,458,792,37,141,323,80,453,417,620,961,850,870,821,441,191,456,147,261,459,613,438,821,436,554,70,710,443,272,255,98,678,1,86,653,862,844,877,282,864,724,938,462,528,600,228,655,91,514,995,479,358,341,346,433,542,555,658,828,649,708,27,772,556,619,123,413,301,266,60,831,286,873,754,666,301,110,600,48,230,516,226,338,259,180,818,181,389,298,852,563,871,806,185,419,573,868,680,665,706,583,878,992,217,586,824,813,661,248,755,855,583,48,413,907,465,700,993,903,254,516,225,974,639,211,804,66,122,159,290,163,703,449,662,281,706,168,971,974,952,798,676,965,777,272,578,781,638,283,351,652,281,659,428,145,634,978,774,187,940,388,256,388,680,644,391,48,248,37,990,150,217,645,745,704,729,943,247,939,159,477,585,29,713,967,582,171,358,144,56,546,568,447,207,728,128,174,901,752,581,308,865,672,832,83,321,819,231,429,478,921,4,916,236,340,713,683,56,864,337,32,760,667,737,312,845,84,487,506,459,809,343,438,771,292,91,141,825,245,270,501,636,929,321,870,280,971,957,394,160,172,17,324,710,538,390,282,353,713,47,237,163,47,782,731,266,355,190,206,643,360,794,695,710,156,765,558,226,0,488,228,302,855,47,787,630,582,873,451,815,142,527,326,845,335,419,272,67,611,774,638,477,320,391,985,44,74,443,207,587,707,437,156,687,853,603,914,63,938,577,965,455,149,246,289,126,445,508,1,741,923,563,940,822,868,737,111,849,311,782,352,689,945,481,322,614,892,617,861,519,57,973,863,736,896,769,873,977,701,616,860,874,682,157,548,510,501,262,278,832,649,715,670,976,224,865,216,301,753,115,391,70,238,192,833,149,435,230,56,905,735,574,390,236,543,936,58,516,770,595,34,489,55,612,64,393,206,910,608,659,504,528,897,505,243,153,819,249,339,309,185,71,810,996,223,44,44,742,519,54,646,267,282,566,983,684,466,193,572,427,127,735,406,408,700,923,359,628,790,901,876,175,240,220,771,247,531,392,89,213,506,54,517,978,482,124,895,750,363,85,828,833,730,281,50,714,9,553,297,265,956,195,129,576,684,919,441,693,995,631,15,896,42,115,360,286,786,505,980,25,33,65,718,250,630,588,310,900,400,347,523,899,978,730,11,524,943,278,156,676,113,321,460,207,567,231,139,550,924,446,467,644,5,463,441,278,656,52,818,389,542,222,403,561,7,704,100,19,885,87,664,98,178,713,343,375,375,153,480,710,426,169,399,395,532,898,478,849,898,873,83,494,784,997,673,686,83,117,387,830,611,567,997,981,562,337,261,820,809,62,484,579,28,269,525,442,510,602,701,59,357,397,887,118,896,581,782,735,84,654,672,283,763,251,16,54,174,107,60,28,17,713,891,324,395,288,809,348,147,380,822,779,570,552,424,575,785,143,420,901,817,582,342,289,159,964,258,587,964,49,435,706,215,32,71,873,772,832,30,873,417,850,533,435,236,148,515,400,587,232,484,950,829,947,481,698,614,184,777,966,875,749,344,358,925,538,325,486,483,967,209,419,492,797,934,966,121,602,781,197,720,399,501,285,167,642,299,0,544,578,110,946,572,979,244,839,453,127,239,600,652,670,882,805,62,952,748,967,651,219,648,350,556,92,188,143,996,123,128,969,49,451,685,355,560,266,187,813,519,452,840,579,795,364,977,937,51,715,62,147,251,740,527,292,133,447,429,802,411,660,381,636,675,331,988,950,262,722,526,573,141,785,124,135,782,427,492,758,601,185,973,564,855,316,569,723,898,666,724,733,366,166,496,994,117,671,126,60,697,330,202,847,252,734,572,838,744,740,549,474,89,787,918,322,527,920,983,520,85,816,944,20,945,472,388,749,0,117,865,665,104,620,692,926,744,996,428,650,765,48,977,899,896,144,820,82,439,111,987,386,345,486,22,944,654,41,77,839,355,832,954,155,647,465,353,585,723,106,183,877,516,202,833,268,427,638,764,308,239,183,268,696,65,109,503,460,585,63,887,718,147,364,232,407,935,672,832,191,560,418,914,615,577,742,149,262,74,861,89,60,473,375,300,833,70,748,47,157,205,228,287,522,334,302,541,515,333,400,249,111,676,828,211,514,661,441,307,160,428,272,158,670,901,673,135,687,889,558,262,529,106,545,447,69,709,22,667,881,843,75,255,466,542,709,404,749,760,213,505,114,366,305,982,280,920,39,628,916,150,443,502,575,935,841,330,955,692,496,597,270,622,628,627,860,59,713,307,770,33,782,192,675,240,626,164,542,224,761,651,610,230,532,73,346,362,85,669,688,399,155,306,38,315,940,312,297,683,133,185,169,752,308,813,94,16,454,351,386,592,787,142,791,585,123,861,925,659,556,926,866,75,656,896,249,319,205,124,573,519};
    int size = sizeof(v)/sizeof(*v);

    int aux;
    int posMin;
    int posMax;
    int posFinal;
    posFinal = size - 1;

    for (int i = 0; i < size / 2; i++) {
        posMin = i;
        posMax = i;

        for (int j = i; j < posFinal; j++) {
            if (v[j] > v[posMax]) {
                posMax = j;
            }

            if (v[j] < v[posMin]) {
                posMin = j;
            }
        }
        
        aux = v[posMin];
        v[posMin] = v[i];
        v[i] = aux;

        if (posMax == i) {
            posMax = posMin;
        }

        aux = v[posFinal];
        v[posFinal] = v[posMax];
        v[posMax] = aux;

        posFinal--;

    }
    
    cout << endl;
    for (int i = 0; i < size; i++) cout << v[i] << " ";

    t1 = clock();

    cout << "TIEMPO: " << double(t1 - t0) / CLOCKS_PER_SEC;
}

int main(){
    propioSort();
}